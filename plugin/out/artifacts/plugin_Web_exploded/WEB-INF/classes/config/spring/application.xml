<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">


	<context:component-scan base-package="com.framework.service"/>
	<context:component-scan base-package="com.framework.dao"/>

	<!-- 加载并读取数据库连接的配置文件 -->
	<context:property-placeholder location="classpath:config/db/db_oracle.properties"/>

	<!-- 数据源的配置 -->
	<bean id="dataSource" name="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<!-- 指定连接数据库的驱动-->
		<property name="driverClass" value="${jdbc.driverClassName}"/>
		<!-- 指定连接数据库的URL-->
		<property name="jdbcUrl" value="${jdbc.url}"/>
		<!-- 指定连接数据库的用户名-->
		<property name="user" value="${jdbc.username}"/>
		<!-- 指定连接数据库的密码-->
		<property name="password" value="${jdbc.password}"/>
		<!-- 指定连接池中保留的最大连接数. Default:15-->
		<property name="maxPoolSize" value="${jdbc.maxPoolSize}"/>
		<!-- 指定连接池中保留的最小连接数-->
		<property name="minPoolSize" value="${jdbc.minPoolSize}"/>
		<!-- 指定连接池的初始化连接数  取值应在minPoolSize 与 maxPoolSize 之间.Default:3-->
		<property name="initialPoolSize" value="${jdbc.initialPoolSize}"/>
		<!-- 最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。 Default:0-->
		<property name="maxIdleTime" value="${jdbc.maxIdleTime}"/>
		<!-- 当连接池中的连接耗尽的时候c3p0一次同时获取的连接数. Default:3-->
		<property name="acquireIncrement" value="${jdbc.acquireIncrement}"/>
		<!-- JDBC的标准,用以控制数据源内加载的PreparedStatements数量。
        但由于预缓存的statements属于单个connection而不是整个连接池所以设置这个参数需要考虑到多方面的因数.如果maxStatements与maxStatementsPerConnection均为0,则缓存被关闭。Default:0-->
		<property name="maxStatements" value="${jdbc.maxStatements}"/>
		<!-- 每60秒检查所有连接池中的空闲连接.Default:0 -->
		<property name="idleConnectionTestPeriod" value="${jdbc.idleConnectionTestPeriod}"/>
	</bean>

	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager"
		  class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 数据库工具 -->
	<bean id="jdbc" class="org.springframework.jdbc.core.JdbcTemplate" scope="prototype">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<!-- 自定义数据库 -->
	<bean id="dao"  class="com.tool.cfg.base.data.db.JdbcTemplateImpl">
		<property name="jdbcTemplate" ref="jdbc"></property>
	</bean>

</beans>